// MIT License (c)2018 Spencer A. Jobe

(function loadModule_types(win){var types=win.types||{};if(typeof Object.getPrototypeOf!=="function"){if(typeof"test".__proto__==="object"){Object.getPrototypeOf=function(object){return object.__proto__;};}else{Object.getPrototypeOf=function(object){return object.constructor.prototype;};}}
var errorLog=[];var RUNTIME_COUNTER_Testing=0;var checkInProgress=function(){return RUNTIME_COUNTER_Testing>0;};var getType=function(value){var baseTypeList="[boolean][number][string][object][function][array][symbol]";var stringType;var baseType;var baseText="";if(value===undefined||value===null){return"undefined";}
baseText=Object.prototype.toString.call(value);stringType=baseText.split(" ")[1];baseType=baseText.split(" ")[0].substring(1).toLowerCase();stringType=stringType.substring(0,stringType.length-1).toLowerCase();if(baseTypeList.indexOf("["+stringType+"]")===-1){return baseType;}
return stringType;};var createDebugObjectDisplay=function(target){var display=Object.create(null);var proto=Object.getPrototypeOf(target);for(var name in target){if(target.hasOwnProperty(name)){display[name]=target[name];}}
for(var name in proto){if(proto.hasOwnProperty(name)){if(types.isNull(display.__proto__)){display.__proto__=Object.create(null);}
display.__proto__[name]=proto[name];}}
return display;};var setErrorLog=function(name,target,checker){var debugTarget=createDebugObjectDisplay(target);errorLog=["","***************************************************","Type Error","","[Objects/Arguments]",debugTarget,"","","","***************************************************",""];if(checker.hasOwnProperty("__TypeID")){errorLog[7]="[ERROR]: Expected '"+name+"' to be of type "+checker.__TypeID;}else{errorLog[7]="[ERROR]: Expected '"+name+" to match the custom type below";errorLog[8]=checker;}};var checkWithObject=function(name,target,obj){var val=target[name];for(var propName in obj){if(obj.hasOwnProperty(propName)){checker=obj[propName];if(!assertType(propName,val,checker)){return false;}}}
return true;};var assertType=function(name,target,checker){var val;if(!target.hasOwnProperty(name)&&!Object.getPrototypeOf(target).hasOwnProperty(name)){return false;}
val=target[name];if(types.isNull(val)){if(checker!=TNull&&checker!=TAny){return false;}}
if(types.isFunction(checker)){if(checker.__IsAdvancedChecker){return checker(target,name);}
return checker(target[name]);}
if(types.isObject(checker)){return checkWithObject(name,target,checker);}
throw new Error("types.js -[private] assertType(name,target,checker)");};types.isNull=function(value){return getType(value)==="undefined";};types.isNotNull=function(value){return getType(value)!=="undefined";};types.isAny=function(value){return true;};types.isBoolean=function(value){return getType(value)==="boolean";};types.isNumber=function(value){var result=getType(value);return result==="number"?String(value)!=="NaN":false;};types.isString=function(value){return getType(value)==="string";};types.isObject=function(value){return getType(value)==="object";};types.isArray=function(value){return getType(value)==="array";};types.isFunction=function(value){return getType(value)==="function";};types.isSymbol=function(value){return getType(value)==="symbol";};types.isPrototypeProperty=function(target,name){if(types.isNull(target)){throw new Error("types.isPrototypeProperty(target:Object,name:String): ERROR -> target is null.");}
if(!types.isString(name)){throw new Error("types.isPrototypeProperty(target:Object,name:String): ERROR -> name is not a string.");}
return Object.getPrototypeOf(target).hasOwnProperty(name)&&(target.hasOwnProperty(name)===false);};types.isObjectProperty=function(target,name){if(types.isNull(target)){throw new Error("types.isObjectProperty(target:Object,name:String): ERROR -> target is null.");}
if(!types.isString(name)){throw new Error("types.isObjectProperty(target:Object,name:String): ERROR -> name is not a string.");}
return target.hasOwnProperty(name)&&(Object.getPrototypeOf(target).hasOwnProperty(name)===false);};types.check=function(target,targetType,optHardFail){var checker;var valid=true;optHardFail=types.isNull(optHardFail)?false:optHardFail;RUNTIME_COUNTER_Testing+=1;for(var name in targetType){if(targetType.hasOwnProperty(name)){checker=targetType[name];if(assertType(name,target,checker)==false){setErrorLog(name,target,checker);valid=false;}}}
RUNTIME_COUNTER_Testing-=1;if(optHardFail&&valid===false){types.printErrors();throw new Error("Type Error, see console for details.");}
return valid;};types.checkArgs=function(targetArgs,targetType,optHardFail){var args=Array.prototype.slice.call(targetArgs);var target={};var index=0;for(var name in targetType){if(targetType.hasOwnProperty(name)){target[name]=args[index];}
index+=1;}
return types.check(target,targetType,optHardFail);};types.printErrors=function(){for(var i=0;i<errorLog.length;i+=1){console.log(errorLog[i]);}};win.TNull=function(value){return types.isBoolean(value);};win.TNull.__TypeID="TNull";win.TNotNull=function(value){return types.isNotNull(value);};win.TNotNull.__TypeID="TNotNull";win.TAny=function(value){return types.isAny(value);};win.TAny.__TypeID="TAny";win.TBoolean=function(value){return types.isBoolean(value);};win.TBoolean.__TypeID="TBoolean";win.TNumber=function(value){return types.isNumber(value);};win.TNumber.__TypeID="TNumber";win.TString=function(value){return types.isString(value);};win.TString.__TypeID="TString";win.TObject=function(value){return types.isObject(value);};win.TObject.__TypeID="TObject";win.TFunction=function(value){return types.isFunction(value);};win.TFunction.__TypeID="TFunction";win.TSymbol=function(value){return types.isSymbol(value);};win.TFunction.__TypeID="TSymbol"
win.TArray=function(elemType){if(checkInProgress()){throw new Error("TArray types must be defined with an element type. "+"Ex: TArray(TString). Use TArray(TAny) for a general array type.");}
var TTypedArray=function(arr){if(!types.isArray(arr)){return false;}
for(var i=0;i<arr.length;i+=1){if(!elemType(arr[i])){return false;}}
return true;};if(types.isFunction(elemType)){TTypedArray.__TypeID="TArray("+elemType.__TypeID+")";}else if(types.isObject(elemType)){TTypedArray.__TypeID="TArray(<CustomType>)";}
return TTypedArray;};win.TUnion=function(){if(checkInProgress()){throw new Error("TUnion types must be defined with member"+"types. Ex: TUnion(TString,TNumber)  but Not TUnion");}
var typeList=Array.prototype.slice.call(arguments);var typeId="";var TUnionChecker=function(val){for(var i=0;i<typeList.length;i+=1){if(typeList[i](val)){return true;}}
return false;};for(var i=0;i<typeList.length;i+=1){typeId+=","+(typeList[i].__TypeID||"<CustomType>");}
typeId=typeId.substring(1);TUnionChecker.__TypeID="TUnion("+typeId+")";return TUnionChecker;};win.TPrototypeProperty=function(propType){if(checkInProgress()){throw new Error("TPrototypeProperty must be used with a corresponding "+"Type to check. Ex: TPrototypeProperty(TString) but "+"NOT TPrototypeProperty. Use TPrototypeProperty(TAny) "+"for general use case.");}else if(!types.isObject(propType)&&!types.isFunction(propType)){throw new Error("TPrototypeProperty(propType:function|object) ERROR -> propType must be a function or an object.");}
var TPropChecker=function(target,name){return types.isPrototypeProperty(target,name)&&assertType(name,target,propType);};TPropChecker.__TypeID="TPrototypeProperty("+(propType.__TypeID||"<CustomType>")+")";TPropChecker.__IsAdvancedChecker=true;return TPropChecker;};win.TObjectProperty=function(propType){if(checkInProgress()){throw new Error("TObjectProperty must be used with a corresponding "+"Type to check. Ex: TObjectProperty(TString) but "+"NOT TObjectProperty. Use TObjectProperty(TAny) "+"for general use case.");}else if(!types.isObject(propType)&&!types.isFunction(propType)){throw new Error("TObjectProperty(propType:function|object) ERROR -> propType must be a function or an object.");}
var TPropChecker=function(target,name){return types.isObjectProperty(target,name)&&assertType(name,target,propType);};TPropChecker.__TypeID="TObjectProperty("+(propType.__TypeID||"<CustomType>")+")";TPropChecker.__IsAdvancedChecker=true;return TPropChecker;};win.TGuard=function(rootType,guard){if(checkInProgress()){throw new Error("TGuard must be used with a corresponding Type to check and a "+"guard function. Ex: TGuard(TNumber,function(v) { return v > 0; }) but "+"NOT TGuard. Use TGuard(TAny,function(v){...}) for general use case. ");}
if(!types.isObject(rootType)&&!types.isFunction(rootType)){throw new Error("TGuard(rootType:function|object, guard:function) ERROR -> rootType must be a function or an object.");}
if(!types.isFunction(guard)){throw new Error("TGuard(rootType:function|object, guard:function) ERROR -> guard must be a function.");}
var TGuardChecker=function(target,name){return assertType(name,target,rootType)&&guard(target[name]);};TGuardChecker.__TypeID="TGuard("+(rootType.__TypeID||"<CustomType>")+", "+String(guard)+")";TGuardChecker.__IsAdvancedChecker=true;return TGuardChecker;};win.types=types;}(window));